/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
export { NODE_MAJOR_VERSION, NODE_MINOR_VERSION, DOCUSAURUS_VERSION, DEFAULT_BUILD_DIR_NAME, DEFAULT_CONFIG_FILE_NAME, BABEL_CONFIG_FILE_NAME, GENERATED_FILES_DIR_NAME, SRC_DIR_NAME, DEFAULT_STATIC_DIR_NAME, OUTPUT_STATIC_ASSETS_DIR_NAME, THEME_PATH, DEFAULT_I18N_DIR_NAME, CODE_TRANSLATIONS_FILE_NAME, DEFAULT_PORT, DEFAULT_PLUGIN_ID, WEBPACK_URL_LOADER_LIMIT, } from '@docusaurus/utils/src/constants';
export { generate, readOutputHTMLFile } from '@docusaurus/utils/src/emitUtils';
export { getFileCommitDate, FileNotTrackedError, GitNotFoundError, } from '@docusaurus/utils/src/gitUtils';
export { mergeTranslations, updateTranslationFileMessages, getPluginI18nPath, localizePath, } from '@docusaurus/utils/src/i18nUtils';
export { mapAsyncSequential, findAsyncSequential } from '@docusaurus/utils/src/jsUtils';
export { normalizeUrl, getEditUrl, fileToPath, encodePath, isValidPathname, resolvePathname, parseURLPath, serializeURLPath, hasSSHProtocol, buildHttpsUrl, buildSshUrl, } from '@docusaurus/utils/src/urlUtils';
export type { URLPath } from '@docusaurus/utils/src/urlUtils';
export { type Tag, type TagsListItem, type TagModule, type FrontMatterTag, normalizeFrontMatterTags, groupTaggedItems, getTagVisibility, } from '@docusaurus/utils/src/tags';
export { parseMarkdownHeadingId, escapeMarkdownHeadingIds, unwrapMdxCodeBlocks, admonitionTitleToDirectiveLabel, createExcerpt, DEFAULT_PARSE_FRONT_MATTER, parseMarkdownContentTitle, parseMarkdownFile, writeMarkdownHeadingId, type WriteHeadingIDOptions, } from '@docusaurus/utils/src/markdownUtils';
export { type ContentPaths, type BrokenMarkdownLink, replaceMarkdownLinks, } from '@docusaurus/utils/src/markdownLinks';
export { type SluggerOptions, type Slugger, createSlugger } from '@docusaurus/utils/src/slugger';
export { isNameTooLong, shortName, posixPath, toMessageRelativeFilePath, aliasedSitePath, aliasedSitePathToRelativePath, escapePath, addTrailingPathSeparator, } from '@docusaurus/utils/src/pathUtils';
export { md5Hash, simpleHash, docuHash } from '@docusaurus/utils/src/hashUtils';
export { Globby, GlobExcludeDefault, createMatcher, createAbsoluteFilePathMatcher, } from '@docusaurus/utils/src/globUtils';
export { getFileLoaderUtils, getWebpackLoaderCompilerName, type WebpackCompilerName, } from '@docusaurus/utils/src/webpackUtils';
export { escapeShellArg } from '@docusaurus/utils/src/shellUtils';
export { loadFreshModule } from '@docusaurus/utils/src/moduleUtils';
export { getDataFilePath, getDataFileData, getContentPathList, findFolderContainingFile, getFolderContainingFile, } from '@docusaurus/utils/src/dataFileUtils';
export { isDraft, isUnlisted } from '@docusaurus/utils/src/contentVisibilityUtils';
export { escapeRegexp } from '@docusaurus/utils/src/regExpUtils';
export { askPreferredLanguage } from '@docusaurus/utils/src/cliUtils';
export { flattenRoutes } from '@docusaurus/utils/src/routeUtils';
export { getGitLastUpdate, getLastUpdate, readLastUpdateData, LAST_UPDATE_FALLBACK, type LastUpdateData, type FrontMatterLastUpdate, } from '@docusaurus/utils/src/lastUpdateUtils';
//# sourceMappingURL=index.d.ts.map