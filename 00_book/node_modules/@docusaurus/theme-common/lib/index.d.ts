/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
export { useThemeConfig, type ThemeConfig, type UserThemeConfig, type Navbar, type NavbarItem, type NavbarLogo, type MultiColumnFooter, type SimpleFooter, type Footer, type FooterLogo, type FooterLinkItem, type ColorModeConfig, } from '../src/utils/useThemeConfig';
export { default as ThemedComponent } from '../src/components/ThemedComponent';
export { createStorageSlot, useStorageSlot, listStorageKeys, } from '../src/utils/storageUtils';
export { useContextualSearchFilters } from '../src/utils/searchUtils';
export { useCurrentSidebarCategory, filterDocCardListItems, } from '../src/utils/docsUtils';
export { useBlogListPageStructuredData, useBlogPostStructuredData, } from '../src/utils/structuredDataUtils';
export { usePluralForm } from '../src/utils/usePluralForm';
export { useCollapsible, Collapsible } from '../src/components/Collapsible';
export { ThemeClassNames } from '../src/utils/ThemeClassNames';
export { prefersReducedMotion } from '../src/utils/accessibilityUtils';
export { useEvent, usePrevious, composeProviders, ReactContextError, } from '../src/utils/reactUtils';
export { PageMetadata, HtmlClassNameProvider } from '../src/utils/metadataUtils';
export { useColorMode, type ColorMode } from '../src/contexts/colorMode';
export { NavbarSecondaryMenuFiller, type NavbarSecondaryMenuComponent, } from '../src/contexts/navbarSecondaryMenu/content';
export { useWindowSize } from '../src/hooks/useWindowSize';
export { translateTagsPageTitle, listTagsByLetters, type TagLetterEntry, } from '../src/utils/tagsUtils';
export { useSearchQueryString, useSearchLinkCreator, } from '../src/hooks/useSearchPage';
export { isMultiColumnFooterLinks } from '../src/utils/footerUtils';
export { isRegexpStringMatch } from '../src/utils/regexpUtils';
export { duplicates, uniq } from '../src/utils/jsUtils';
export { usePrismTheme } from '../src/hooks/usePrismTheme';
export { useDocsPreferredVersion } from '../src/contexts/docsPreferredVersion';
export { processAdmonitionProps } from '../src/utils/admonitionUtils';
export { SkipToContentFallbackId, SkipToContentLink, } from '../src/utils/skipToContentUtils';
export { UnlistedBannerTitle, UnlistedBannerMessage, UnlistedMetadata, } from '../src/utils/unlistedUtils';
export { ErrorBoundaryTryAgainButton, ErrorBoundaryError, ErrorBoundaryErrorMessageFallback, ErrorCauseBoundary, } from '../src/utils/errorBoundaryUtils';
//# sourceMappingURL=index.d.ts.map